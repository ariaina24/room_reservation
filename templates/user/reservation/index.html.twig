{% extends 'base.html.twig' %}

{% block title %}RÃ©servation - RoomReservation{% endblock %}

{% block body %}

{% include 'include/nav.html.twig' %}

<div class="min-h-screen bg-gradient-to-br from-white to-blue-50 pt-24 px-6 flex items-center justify-center">
    <div class="bg-white rounded-xl shadow-xl w-full max-w-2xl p-8 animate-fade-in-up">
        <h2 class="text-3xl font-bold text-blue-600 mb-6 text-center">ðŸ“… RÃ©servation d'une salle</h2>

        {% for message in app.flashes('error') %}
            <div class="bg-red-500 text-white p-4 rounded mb-4">{{ message }}</div>
        {% endfor %}

        <form method="post" class="space-y-6">
            <div>
                <label for="room" class="block text-gray-700 font-medium mb-1">Salle</label>
                <select name="room_id" id="room" required class="w-full border border-gray-300 rounded px-4 py-2 focus:ring focus:ring-blue-200">
                    <option value="" disabled {{ selectedRoom is null ? 'selected' : '' }}>Choisissez une salle</option>
                    {% for room in rooms %}
                        <option value="{{ room.id }}" {{ selectedRoom and room.id == selectedRoom.id ? 'selected' : '' }}>
                            {{ room.name }} ({{ room.capacity }} places)
                        </option>
                    {% endfor %}
                </select>
            </div>

            <div>
                <label for="date" class="block text-gray-700 font-medium mb-1">Date</label>
                <input type="date" name="date" id="date" required
                    class="w-full border border-gray-300 rounded px-4 py-2 focus:ring focus:ring-blue-200"
                    min="{{ "now"|date('Y-m-d') }}">
            </div>

            <div class="flex gap-4">
                <div class="w-1/2">
                    <label for="start_time" class="block text-gray-700 font-medium mb-1">Heure de dÃ©but</label>
                    <input type="time" name="start_time" id="start_time" required
                           class="w-full border border-gray-300 rounded px-4 py-2 focus:ring focus:ring-blue-200">
                </div>
                <div class="w-1/2">
                    <label for="end_time" class="block text-gray-700 font-medium mb-1">Heure de fin</label>
                    <input type="time" name="end_time" id="end_time" required
                           class="w-full border border-gray-300 rounded px-4 py-2 focus:ring focus:ring-blue-200">
                </div>
            </div>

            <div class="text-center">
                <button type="submit"
                        class="bg-green-600 hover:bg-green-700 text-white font-semibold py-3 px-6 rounded-lg shadow-md transition">
                    Confirmer la rÃ©servation
                </button>
                <a href="{{path('user_room_list')}}"
                        class="bg-yellow-500 hover:bg-yellow-600 text-white font-semibold py-3 px-6 ml-4 rounded-lg shadow-md transition">
                    Annuler
                </a>
            </div>
        </form>
    </div>
</div>

<script>
    const dateInput = document.getElementById('date');
    const startTimeInput = document.getElementById('start_time');
    const endTimeInput = document.getElementById('end_time');

    function pad(n) {
        return n < 10 ? '0' + n : n;
    }

    function updateTimeMin() {
        const today = new Date();
        const selectedDate = new Date(dateInput.value);

        if (
            selectedDate.getFullYear() === today.getFullYear() &&
            selectedDate.getMonth() === today.getMonth() &&
            selectedDate.getDate() === today.getDate()
        ) {
            const nowHour = pad(today.getHours());
            const nowMinute = pad(today.getMinutes());
            const now = `${nowHour}:${nowMinute}`;
            startTimeInput.min = now;
            endTimeInput.min = startTimeInput.value || now;
        } else {
            startTimeInput.removeAttribute('min');
            endTimeInput.removeAttribute('min');
        }
    }

    dateInput.addEventListener('change', updateTimeMin);
    startTimeInput.addEventListener('change', () => {
        endTimeInput.min = startTimeInput.value;
    });

    document.addEventListener('DOMContentLoaded', updateTimeMin);
</script>

{% endblock %}
